name: Build and Publish

on:
  push:
    branches:
      - main
  release:
    types: [created]
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: false

  publish:
    needs: build
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Extract version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            # Get the latest tag for workflow_run trigger
            VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
            echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Update package version
        run: npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
